<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>線段樹 Segment Tree on Nyanyannya</title><link>https://pixelcat31415.github.io/blog/docs/segment_tree/</link><description>Recent content in 線段樹 Segment Tree on Nyanyannya</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Wed, 16 Nov 2022 23:14:30 +0800</lastBuildDate><atom:link href="https://pixelcat31415.github.io/blog/docs/segment_tree/index.xml" rel="self" type="application/rss+xml"/><item><title>線段樹的精神</title><link>https://pixelcat31415.github.io/blog/docs/segment_tree/0_preface/</link><pubDate>Thu, 17 Nov 2022 19:31:51 +0800</pubDate><guid>https://pixelcat31415.github.io/blog/docs/segment_tree/0_preface/</guid><description>線段樹的精神是什麼？為什麼線段樹能處理這麼多序列問題？就我目前的觀點，線段樹展現兩個主要的概念。 分治 最經典的線段樹通常是用遞迴實做，從這點就可以看到線</description></item><item><title>線段樹與無修改、區間查詢問題</title><link>https://pixelcat31415.github.io/blog/docs/segment_tree/1_no_upd/</link><pubDate>Wed, 23 Nov 2022 20:26:39 +0800</pubDate><guid>https://pixelcat31415.github.io/blog/docs/segment_tree/1_no_upd/</guid><description>許多題目長得像是「給你一個序列，多次詢問，每次請你回答某個區間的 XX 答案」，此類區間查詢問題往往可以用遞迴分治解決，而就像前一節提到的，蓋一棵線段樹就像</description></item></channel></rss>